<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd"
           default-autowire="byName">
		<!-- 注意上面的default-autowire="byName"，如果没有这个声明那么HibernateDaoSupport中的sessionFactory不会被注入 -->

    <!-- 注解驱动的TASK-->
    <task:annotation-driven/>

	<!-- 使用@Autowired -->	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

		<!-- 约定优于配置，约定优于配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		  <property name="jdbcUrl" value="jdbc:mysql://192.168.1.33:3306/zt?useUnicode=true&amp;characterEncoding=UTF8"/> 
	 	<!--<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/zt?useUnicode=true&amp;characterEncoding=UTF8"/>  -->
		<property name="user" value="root"/>
        <property name="password" value="123"/>
		<property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="15"/>
        <property name="initialPoolSize" value="10"/>
        <property name="maxIdleTime" value="60"/>
        <property name="maxStatements" value="0"/>
        <property name="acquireIncrement" value="5"/>
        <property name="idleConnectionTestPeriod" value="60"/>
        <property name="acquireRetryAttempts" value="30"/>
		<property name="acquireRetryDelay">
    		<value>100</value>
		</property>
		<property name="breakAfterAcquireFailure">
    		<value>false</value>
		</property>

	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingDirectoryLocations">
            <!-- 这里直接映射的pojo类所在的包，简单方便不用没次加一个pojo类都需要到这里来添加 -->
            <list>
                <value>classpath:com/mftour/spring/model</value> 
                <!-- by lk date:2013年12月30日-->
               <!--  <value>classpath:com/mftour/spring/model2</value> -->
            </list>
        </property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
			<!-- 	<prop key="hibernate.hbm2ddl.auto">update</prop> -->
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
                <!-- 事务隔离，避免出现脏读和虚读-->
                <prop key="hibernate.connection.isolation">8</prop>
			</props>
		</property>
	</bean>
	
	<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。-->
	<context:component-scan base-package="com.mftour.spring">
		<context:exclude-filter type="regex" expression="com.mftour.spring.web.*"/>
        <!-- <context:exclude-filter type="regex" expression="com.mftour.spring.web2.*"/> -->
    </context:component-scan>
	
	<!-- 下面是配置声明式事务管理的，个人感觉比用注解管理事务要简单方便 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<aop:config>
        <aop:advisor pointcut="execution(* com.mftour.spring.service*.*Service.*(..))" advice-ref="txAdvice"/>
        <aop:advisor pointcut="execution(* com.mftour.spring.dao*.*Dao*.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="load*" read-only="true"/>
            <tx:method name="update*" rollback-for="Throwable" propagation="REQUIRED"/>
            <tx:method name="insert*" rollback-for="Throwable" propagation="REQUIRED"/>
            <tx:method name="create*" rollback-for="Throwable" propagation="REQUIRED"/>
			<tx:method name="add*" rollback-for="Throwable" propagation="REQUIRED"/>
            <tx:method name="*" rollback-for="Exception"/>
        </tx:attributes>
	</tx:advice>
	
</beans>